<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Zher</title>
    <link>https://zhezh09.github.io/tags/golang/</link>
    <description>Recent content in golang on Zher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 13 Jan 2019 11:57:26 +0800</lastBuildDate>
    
	<atom:link href="https://zhezh09.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>『Go核心36讲』| 07 - go语句以及执行规则（下）</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20190113-tutorial-go36-07/</link>
      <pubDate>Sun, 13 Jan 2019 11:57:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20190113-tutorial-go36-07/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Q1：用什么手段可以对 goroutine 的启用数量加以限制 ?&lt;/li&gt;
&lt;li&gt;Q2：怎样才能让主 goroutine 等待其他 goroutine ?&lt;/li&gt;
&lt;li&gt;Q3：怎样让我们启用的多个 goroutine 按照既定的顺序执行 ?&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;align-right&#39;&gt;
  &lt;p&gt;&lt;a href=&#34;https://time.geekbang.org/column/article/39841?code=ti58hl0Fap2y5S-OE0G-O-2CiCtjLT94OxcNaBDzI6k%3D&#34;&gt;专栏：17 | go语句及其执行规则（下）&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 06 - go语句以及执行规则（上）</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20190112-tutorial-go36-06/</link>
      <pubDate>Sat, 12 Jan 2019 14:51:10 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20190112-tutorial-go36-06/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;进程、线程(系统级)&lt;/li&gt;
&lt;li&gt;goroutine(用户级)&lt;/li&gt;
&lt;li&gt;调度器&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;align-right&#39;&gt;
  &lt;p&gt;&lt;a href=&#34;https://time.geekbang.org/column/article/39841?code=ti58hl0Fap2y5S-OE0G-O-2CiCtjLT94OxcNaBDzI6k%3D&#34;&gt;专栏：16 | go语句及其执行规则（上）&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 05 - 使用函数的正确姿势</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20190107-tutorial-go36-05/</link>
      <pubDate>Mon, 07 Jan 2019 11:37:08 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20190107-tutorial-go36-05/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;函数类型、函数签名&lt;/li&gt;
&lt;li&gt;高阶函数&lt;/li&gt;
&lt;li&gt;闭包&lt;/li&gt;
&lt;li&gt;函数传参&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;align-right&#39;&gt;
  &lt;a href=&#34;https://time.geekbang.org/column/article/14671?code=ti58hl0Fap2y5S-OE0G-O-2CiCtjLT94OxcNaBDzI6k%252525253D&#34;&gt;专栏：12 | 使用函数的正确姿势&lt;/a&gt;
&lt;/div&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 04 - 程序性能分析基础</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181218-tutorial-go36-04/</link>
      <pubDate>Tue, 18 Dec 2018 21:45:30 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181218-tutorial-go36-04/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;性能分析，有哪些工具可以用？&lt;/li&gt;
&lt;li&gt;概要文件的采样、收集和输出是怎样的，包括怎样启动和停止采样、怎样设定采样频率以及怎样控制输出内容的格式和详细程度？&lt;/li&gt;
&lt;li&gt;每一种概要信息代表了什么，包含什么样的内容？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runtime/pprof.Lookup&lt;/code&gt; 函数的正确调用方式是什么？&lt;/li&gt;
&lt;li&gt;通过这些怎么检查程序瓶颈？&lt;/li&gt;
&lt;li&gt;怎么为基于 HTTP 协议的网络服务添加性能分析接口？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;runtime/trace&lt;/code&gt; 代码包的功用是什么?&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;align-right&#39;&gt;
  &lt;a href=&#34;https://time.geekbang.org/column/article/69812&#34;&gt;专栏：48 &amp;amp; 49 | 程序性能分析基础&lt;/a&gt;
&lt;/div&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 语言机制之数据和语法的设计哲学</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-04-%E6%95%B0%E6%8D%AE%E5%92%8C%E8%AF%AD%E6%B3%95%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%93%B2%E5%AD%A6/</link>
      <pubDate>Sun, 16 Dec 2018 17:25:00 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-04-%E6%95%B0%E6%8D%AE%E5%92%8C%E8%AF%AD%E6%B3%95%E7%9A%84%E8%AE%BE%E8%AE%A1%E5%93%B2%E5%AD%A6/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;本系列文章总共四篇，主要帮助大家理解 Go 语言中一些语法结构和其背后的设计原则，包括指针、栈、堆、逃&amp;gt; 逸分析和值/指针传递。这是第二篇，主要介绍堆和逃逸分析。&lt;/p&gt;

&lt;p&gt;以下是本系列文章的索引：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-01-栈和指针/&#34;&gt;Go 语言机制之栈与指针&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-02-逃逸分析/&#34;&gt;Go 语言机制之逃逸分析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-03-内存剖析/&#34;&gt;Go 语言机制之内存剖析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-04-数据和语法的设计哲学/&#34;&gt;Go 语言机制之数据和语法的设计哲学&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 语言机制之内存剖析</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-03-%E5%86%85%E5%AD%98%E5%89%96%E6%9E%90/</link>
      <pubDate>Fri, 14 Dec 2018 10:24:56 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-03-%E5%86%85%E5%AD%98%E5%89%96%E6%9E%90/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;本系列文章总共四篇，主要帮助大家理解 Go 语言中一些语法结构和其背后的设计原则，包括指针、栈、堆、逃&amp;gt; 逸分析和值/指针传递。这是第二篇，主要介绍堆和逃逸分析。（译者注：这一篇可看成第二篇的进阶版）&lt;/p&gt;

&lt;p&gt;以下是本系列文章的索引：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-01-栈和指针/&#34;&gt;Go 语言机制之栈与指针&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-02-逃逸分析/&#34;&gt;Go 语言机制之逃逸分析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-03-内存剖析/&#34;&gt;Go 语言机制之内存剖析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-04-数据和语法的设计哲学/&#34;&gt;Go 语言机制之数据和语法的设计哲学&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 语言机制之逃逸分析</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-02-%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 12 Dec 2018 15:24:52 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-02-%E9%80%83%E9%80%B8%E5%88%86%E6%9E%90/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;本系列文章总共四篇，主要帮助大家理解 Go 语言中一些语法结构和其背后的设计原则，包括指针、栈、堆、逃&amp;gt; 逸分析和值/指针传递。这是第二篇，主要介绍堆和逃逸分析。&lt;/p&gt;

&lt;p&gt;以下是本系列文章的索引：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-01-栈和指针/&#34;&gt;Go 语言机制之栈与指针&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-02-逃逸分析/&#34;&gt;Go 语言机制之逃逸分析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-03-内存剖析/&#34;&gt;Go 语言机制之内存剖析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-04-数据和语法的设计哲学/&#34;&gt;Go 语言机制之数据和语法的设计哲学&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 语言机制之栈和指针</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-01-%E6%A0%88%E5%92%8C%E6%8C%87%E9%92%88/</link>
      <pubDate>Tue, 11 Dec 2018 17:24:40 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181212-go%E8%AF%AD%E8%A8%80%E6%9C%BA%E5%88%B6-01-%E6%A0%88%E5%92%8C%E6%8C%87%E9%92%88/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;本系列文章总共四篇，主要帮助大家理解 Go 语言中一些语法结构和其背后的设计原则，包括指针、栈、堆、逃&amp;gt; 逸分析和值/指针传递。这是第二篇，主要介绍堆和逃逸分析。&lt;/p&gt;

&lt;p&gt;以下是本系列文章的索引：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;👉 &lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-01-栈和指针/&#34;&gt;Go 语言机制之栈与指针&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-02-逃逸分析/&#34;&gt;Go 语言机制之逃逸分析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-03-内存剖析/&#34;&gt;Go 语言机制之内存剖析&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io//post/tech/code/golang/20181212-go语言机制-04-数据和语法的设计哲学/&#34;&gt;Go 语言机制之数据和语法的设计哲学&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 03 - Container 包中的那些容器</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181120-tutorial-go36-03/</link>
      <pubDate>Mon, 03 Dec 2018 14:02:03 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181120-tutorial-go36-03/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;Six interesting containers in Golang&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;From &lt;a href=&#34;https://golang.org/src/container/&#34;&gt;pkg/container&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;container/list&lt;/li&gt;
&lt;li&gt;container/ring&lt;/li&gt;
&lt;li&gt;container/heap&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Built in

&lt;ul&gt;
&lt;li&gt;map&lt;/li&gt;
&lt;li&gt;slice&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Channels as quenues&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>[转] Golang | Slice 深入理解</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181121-slice-src-reading/</link>
      <pubDate>Wed, 21 Nov 2018 14:06:08 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181121-slice-src-reading/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://halfrost.com/go_slice/#&#34;&gt;转自：深入解析 Go 中 Slice 底层实现&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | Slice Deep Learning</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20181117-slice-deep-learning/</link>
      <pubDate>Sat, 17 Nov 2018 14:00:24 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20181117-slice-deep-learning/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.golang.org/go-slices-usage-and-internals&#34;&gt;Go Blog: Go slice internals 学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 02-数组与切片</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180913-tutorial-go36-02/</link>
      <pubDate>Sat, 17 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180913-tutorial-go36-02/</guid>
      <description>&lt;!-- 摘要 --&gt;   

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;通过上 &lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180903-tutorial-go36-01/&#34;&gt;小结&lt;/a&gt; 学习主要加深了对：&lt;code&gt;常用源码文件(命令、库、测试)写法、程序实体(常量、变量、结构体、函数、接口, 尤其是变量)以及相关的各种概念和编程技巧(类型推断、变量重声明、可重名变量、类型断言、类型转换、别名类型和潜在类型等)&lt;/code&gt; 的理解。&lt;/li&gt;
&lt;li&gt;接下来进入模块二：数组与切片，主要侧重于理解数组与切片底层的实现方式、存储结构、以及这两个集合类类型的区别是什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;align-right&#39;&gt;
  &lt;p&gt;&lt;a href=&#34;https://time.geekbang.org/column/article/14106?code=ti58hl0Fap2y5S-OE0G-O-2CiCtjLT94OxcNaBDzI6k%3D&#34;&gt;专栏：07 | 数组和切片&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-05 | 编码实践</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180910-grpc-05-practice/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180910-grpc-05-practice/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;学习完了理论知识，开始写点 Demo 体验一番吧！ Sohoo！😋&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-04 | 什么是 Protocol Buffers？</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;上一小节，简单熟悉了一下 &lt;code&gt;gRPC&lt;/code&gt;，接下来继续学习 &lt;code&gt;Protocol Buffers&lt;/code&gt; 的相关知识：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 Protocol Buffers ?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.proto&lt;/code&gt; 文件怎么写？ -&amp;gt; 语言规范&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.proto&lt;/code&gt; 文件写好了怎么用？&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-03 | 什么是 gRPC？</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/</link>
      <pubDate>Thu, 06 Sep 2018 09:12:12 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;上一小节，简单熟悉了一下 &lt;code&gt;RPC&lt;/code&gt;，接下来继续学习 &lt;code&gt;gRPC&lt;/code&gt; 的基础概念：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 gRPC ?&lt;/li&gt;
&lt;li&gt;gRPC 的关键概念有哪些 ?&lt;/li&gt;
&lt;li&gt;在 gRPC 中，如何去定义一个服务 ？&lt;/li&gt;
&lt;li&gt;gRPC 服务类型有哪几种？&lt;/li&gt;
&lt;li&gt;一个 gRPC 客户端调用一个 gRPC 服务端方法时，会发生什么？&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-02 | 什么是 RPC？</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/</link>
      <pubDate>Thu, 06 Sep 2018 08:12:12 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;上一小节，简单熟悉了一下基于 gRPC 的 Hello World Demo 程序，接下来学习 gRPC 的相关概念知识，先来看 &lt;code&gt;RPC&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 RPC ?&lt;/li&gt;
&lt;li&gt;RPC 的核心概念有哪些？&lt;/li&gt;
&lt;li&gt;RPC 是调用流程是怎么样的？&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-01 | Hello World Demo</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;Ok, 先来安装 gRPC 的开发环境，并且实践一下 Hello World 程序吧！&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang | gRPC 学习笔记集</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-00/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-00/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;🙂 So, 开始学习 gRPC 啦！！！ 学习笔记，内容包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/&#34;&gt;Note1: gRPC | Hello Wrold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/&#34;&gt;Note2: gRPC基础概念 | 什么是 RPC?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/&#34;&gt;Note3: gRPC基础概念 | 什么是 gRPC?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/&#34;&gt;Note4: gRPC基础概念 | 什么是 Protocol Buffers?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 01-基础概念补漏</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180903-tutorial-go36-01/</link>
      <pubDate>Mon, 03 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180903-tutorial-go36-01/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;这一节，主要跟着专栏第一章补漏一些必备的基础概念，内容概览：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Go 中的源码文件分类&lt;/li&gt;
&lt;li&gt;关于命令源码文件、库源码文件你漏掉了那些知识点？&lt;/li&gt;
&lt;li&gt;程序实体那些事儿&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&#39;align-right&#39;&gt;
  &lt;p&gt;&lt;a href=&#34;https://time.geekbang.org/column/article/13159&#34;&gt;专栏：02 | 命令源码文件&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://time.geekbang.org/column/article/13176&#34;&gt;专栏：03 | 库源码文件&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://time.geekbang.org/column/article/13178&#34;&gt;专栏：04 | 程序实体的那些事儿（上）&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://time.geekbang.org/column/article/13562&#34;&gt;专栏：05 | 程序实体的那些事儿（中）&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://time.geekbang.org/column/article/13601&#34;&gt;专栏：06 | 程序实体的那些事儿（下）&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>『Go核心36讲』| 学习笔记集</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180903-tutorial-go36-00/</link>
      <pubDate>Sun, 02 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180903-tutorial-go36-00/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;&lt;a href=&#34;https://time.geekbang.org/column/intro/112&#34;&gt;《Go语言核心36讲》&lt;/a&gt; 是郝林老师发布的一则专栏教程(付费)，以音频+文稿的方式系统的讲述了 Go 的知识。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;我自己使用 Go 已经有两年时间了(从毕业到现在)，在这个过程中阅读过一些书籍、博客、文档等，遇到问题也是随手查下资料解决掉了，现在回顾一下感觉有很多知识漏洞还没有补上或对某些知识点还是似懂非懂的样子，所以就借此机会跟随这个专栏巩固一下 Go 的知识吧！ 以下内容为我自己学习过程中整理的学习笔记。So, Let&amp;rsquo;s Go!&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 依赖管理-02：Go Modules 使用笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-02/</link>
      <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-02/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;Go1.11 新特性 — 依赖管理工具：Go Modules 使用过程学习笔记，内容包括:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何在 &lt;code&gt;新&lt;/code&gt; 的项目上使用 go modules&lt;/li&gt;
&lt;li&gt;如何在 &lt;code&gt;旧&lt;/code&gt; 的项目中引入 go modules&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | 依赖管理-01：Go Modules 初步了解和学习</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-01/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-01/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;Go1.11 新特性 — 依赖管理工具：Go Modules 初步学习和使用笔记，内容包括:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;简单了解下 &lt;code&gt;Go Module&lt;/code&gt; 以及一些新概念&lt;/li&gt;
&lt;li&gt;简单了解下 &lt;code&gt;go mod&lt;/code&gt; 命令&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | 理解 Golang 的 nil (转)</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180822-advanced-%E7%90%86%E8%A7%A3golang%E7%9A%84nil/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180822-advanced-%E7%90%86%E8%A7%A3golang%E7%9A%84nil/</guid>
      <description>&lt;p&gt;&lt;strong&gt;理解 &lt;code&gt;nil&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 是什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 在 Go 中又是什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 意味着什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 有用吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们常常会把 nil 拼写成 null, 学过 C 的同学肯定听过这个 null 符号，甚至某些让人痛恨的同学还故意取一个这样的名字&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang | Pits =&gt; Concurrent access map</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180718-concurrent-access-map-pits/</link>
      <pubDate>Wed, 18 Jul 2018 14:09:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180718-concurrent-access-map-pits/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Issue: 为什么 map 并发不安全，读也不安全吗？&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | Step-by-step guide to concurrency 学习笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180701-tutorial_step-by-step-guide-to-concurrency/</link>
      <pubDate>Sun, 01 Jul 2018 14:09:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180701-tutorial_step-by-step-guide-to-concurrency/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://yourbasic.org/golang/concurrent-programming/&#34;&gt;原文：Step-by-step guide to concurrency&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://blog.xiayf.cn/2015/05/20/fundamentals-of-concurrent-programming/&#34;&gt;参考：Go并发编程基础（译）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;内容涵盖：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;运行期并发线程(goroutines)&lt;/li&gt;
&lt;li&gt;基本的同步技术(通道和锁)&lt;/li&gt;
&lt;li&gt;Golang中基本的并发模式&lt;/li&gt;
&lt;li&gt;死锁和数据竞争&lt;/li&gt;
&lt;li&gt;并行计算&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | cmd - go cgo</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180629-go_cmd_03_cgo/</link>
      <pubDate>Fri, 29 Jun 2018 14:09:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180629-go_cmd_03_cgo/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | cmd - go install | run | clean | env | get</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180627-go_cmd_02_install_run_clean_env_get/</link>
      <pubDate>Wed, 27 Jun 2018 14:09:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180627-go_cmd_02_install_run_clean_env_get/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;go install&lt;/li&gt;
&lt;li&gt;go run&lt;/li&gt;
&lt;li&gt;go clean&lt;/li&gt;
&lt;li&gt;go env&lt;/li&gt;
&lt;li&gt;go get&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | cmd - go build 构建 C 的静态 &#43; 动态链接库、Go 的动态链接库</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180625-go_cmd_01_3_go-build_c-archive_c-shared_go-shared/</link>
      <pubDate>Mon, 25 Jun 2018 14:09:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180625-go_cmd_01_3_go-build_c-archive_c-shared_go-shared/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Go 中如何构建 C 的静态链接库&lt;/li&gt;
&lt;li&gt;Go 中如何构建 C 的动态链接库&lt;/li&gt;
&lt;li&gt;Go 中如何构建 Go 的动态链接库&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | cmd - go build 构建模式</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180624-go_cmd_01_2_go-build-mode/</link>
      <pubDate>Sun, 24 Jun 2018 14:07:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180624-go_cmd_01_2_go-build-mode/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;写点摘要？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang | cmd - go build 构建约束</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180623-go_cmd_01_1_go-build-constraint/</link>
      <pubDate>Sat, 23 Jun 2018 14:04:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180623-go_cmd_01_1_go-build-constraint/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | cmd - go build</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180621-go_cmd_01_go-build/</link>
      <pubDate>Thu, 21 Jun 2018 14:04:26 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180621-go_cmd_01_go-build/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | Performance Optimization =&gt; go tarch 学习笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180620-performance-optimization-04-go-torch/</link>
      <pubDate>Tue, 19 Jun 2018 13:48:02 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180620-performance-optimization-04-go-torch/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;go tarch（火焰图）学习笔记&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | Performance Optimization =&gt; 优化建议</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180619-performance-optimization-05-experience/</link>
      <pubDate>Tue, 19 Jun 2018 13:48:02 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180619-performance-optimization-05-experience/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://software.intel.com/en-us/blogs/2014/05/10/debugging-performance-issues-in-go-programs&#34;&gt;转自：Debugging performance issues in Go programs&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | Performance Optimization =&gt; pprof practice</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180615-performance-optimization-03-pprof-practice/</link>
      <pubDate>Fri, 15 Jun 2018 13:48:02 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180615-performance-optimization-03-pprof-practice/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;pprof 小练习&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | Stdlib - runtime</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180610-stdlib-runtime/</link>
      <pubDate>Sun, 10 Jun 2018 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180610-stdlib-runtime/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;了解 runtime 包中的的环境变量&lt;/li&gt;
&lt;li&gt;了解 runtime 包中的基本函数及使用&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | Performance Optimization =&gt; pprof</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180606-performance-optimization-02-pprof-usage/</link>
      <pubDate>Wed, 06 Jun 2018 13:48:02 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180606-performance-optimization-02-pprof-usage/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;go tool pprof 用法&lt;/li&gt;
&lt;li&gt;cpu、goroutine、heap 分析方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 程序性能优化学习笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180605-performance-optimization-01-introduction/</link>
      <pubDate>Tue, 05 Jun 2018 13:48:02 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180605-performance-optimization-01-introduction/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;程序优化有哪些方式和步骤？&lt;/li&gt;
&lt;li&gt;可供选择的调优工具有哪些？&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 关于 for range 的一些细节</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180328-%E5%85%B3%E4%BA%8E_for-range_%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</link>
      <pubDate>Wed, 28 Mar 2018 13:48:02 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180328-%E5%85%B3%E4%BA%8E_for-range_%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;for range&lt;/code&gt; 的迭代变量会被重用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;range expression&lt;/code&gt;  的副本参与 iteration&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | net/http =&gt; Customize Handler、ServeMux、Middleware</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180320_net-http_02_customize-handler&#43;servemux&#43;middleware/</link>
      <pubDate>Tue, 20 Mar 2018 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180320_net-http_02_customize-handler&#43;servemux&#43;middleware/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;怎么定义 Handler？&lt;/li&gt;
&lt;li&gt;怎么定义 Server？&lt;/li&gt;
&lt;li&gt;怎么定义 Middleware？ 如何用？&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | net/http =&gt; server.go 源码阅读</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180316_net-http_01_reading-server.go/</link>
      <pubDate>Fri, 16 Mar 2018 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180316_net-http_01_reading-server.go/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://golang.org/src/net/http/server.go&#34;&gt;src/net/http/server.go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ResponseWriter ?&lt;/li&gt;
&lt;li&gt;Handler ?&lt;/li&gt;
&lt;li&gt;ServerMux ?&lt;/li&gt;
&lt;li&gt;Server ?&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 定时任务</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180307-lib-cron-learn-note/</link>
      <pubDate>Wed, 07 Mar 2018 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180307-lib-cron-learn-note/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | mgo - Rich MongoDB Driver for Go [译]</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180127-lib-mgo/</link>
      <pubDate>Sat, 27 Jan 2018 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180127-lib-mgo/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;http://labix.org/mgo&#34;&gt;译：Rich MongoDB Driver for Go&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 单元测试</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20171113-go-unit-test/</link>
      <pubDate>Mon, 13 Nov 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20171113-go-unit-test/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | CGO =&gt; 基础 </title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20171023-cgo-note/</link>
      <pubDate>Mon, 23 Oct 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20171023-cgo-note/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://chai2010.gitbooks.io/advanced-go-programming-book/content/ch2-cgo/readme.html&#34;&gt;《深入 CGO 编程》 学习笔记&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Golang | 函数</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20171013-go-func/</link>
      <pubDate>Fri, 13 Oct 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20171013-go-func/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | 模板</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20171010-go-template/</link>
      <pubDate>Tue, 10 Oct 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20171010-go-template/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | SFTP</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20170808-lib-sftp/</link>
      <pubDate>Tue, 08 Aug 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20170808-lib-sftp/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | SSH</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20170807-lib-ssh/</link>
      <pubDate>Mon, 07 Aug 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20170807-lib-ssh/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | Stdlib: Flag 学习笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180912-stdlib-flag/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180912-stdlib-flag/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;flag 包学习笔记概要：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何定义命令行参数，即 flags ？&lt;/li&gt;
&lt;li&gt;flags 解析规则及语法格式 ？&lt;/li&gt;
&lt;li&gt;flag 包有哪些重要的变量、函数以及类型 ？&lt;/li&gt;
&lt;li&gt;如何绑定用户自定义的数据类型作为参数值的类型？&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Golang | 同步与锁</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20170608-go-sync-and-mutex/</link>
      <pubDate>Thu, 08 Jun 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20170608-go-sync-and-mutex/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | 闭包</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20170603-go-closure/</link>
      <pubDate>Sat, 03 Jun 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20170603-go-closure/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
    <item>
      <title>Golang | Context 基础</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20170307-go-context-%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Tue, 07 Mar 2017 16:07:43 +0800</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20170307-go-context-%E5%9F%BA%E7%A1%80/</guid>
      <description>&lt;!-- 摘要 --&gt;</description>
    </item>
    
  </channel>
</rss>