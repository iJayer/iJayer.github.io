<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Zher&#39;s Blog</title>
    <link>https://zhezh09.github.io/tags/golang/</link>
    <description>Recent content in Golang on Zher&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zhezh09.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang: gRPC学习笔记-05 | 编码实践</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180910-grpc-05-practice/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180910-grpc-05-practice/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;学习完了理论知识，开始写点 Demo 体验一番吧！ Sohoo！😋&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: gRPC学习笔记-04 | 什么是 Protocol Buffers？</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;上一小节，简单熟悉了一下 &lt;code&gt;gRPC&lt;/code&gt;，接下来继续学习 &lt;code&gt;Protocol Buffers&lt;/code&gt; 的相关知识：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 Protocol Buffers ?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.proto&lt;/code&gt; 文件怎么写？ -&amp;gt; 语言规范&lt;/li&gt;
&lt;li&gt;&lt;code&gt;.proto&lt;/code&gt; 文件写好了怎么用？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: gRPC学习笔记-03 | 什么是 gRPC？</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/</link>
      <pubDate>Thu, 06 Sep 2018 09:12:12 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;上一小节，简单熟悉了一下 &lt;code&gt;RPC&lt;/code&gt;，接下来继续学习 &lt;code&gt;gRPC&lt;/code&gt; 的基础概念：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 gRPC ?&lt;/li&gt;
&lt;li&gt;gRPC 的关键概念有哪些 ?&lt;/li&gt;
&lt;li&gt;在 gRPC 中，如何去定义一个服务 ？&lt;/li&gt;
&lt;li&gt;gRPC 服务类型有哪几种？&lt;/li&gt;
&lt;li&gt;一个 gRPC 客户端调用一个 gRPC 服务端方法时，会发生什么？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: gRPC学习笔记-02 | 什么是 RPC？</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/</link>
      <pubDate>Thu, 06 Sep 2018 08:12:12 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;上一小节，简单熟悉了一下基于 gRPC 的 Hello World Demo 程序，接下来学习 gRPC 的相关概念知识，先来看 &lt;code&gt;RPC&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;什么是 RPC ?&lt;/li&gt;
&lt;li&gt;RPC 的核心概念有哪些？&lt;/li&gt;
&lt;li&gt;RPC 是调用流程是怎么样的？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: gRPC学习笔记-01 | Hello World Demo</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;Ok, 先来安装 gRPC 的开发环境，并且实践一下 Hello World 程序吧！&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: gRPC 学习笔记集</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-00/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-00/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;🙂 So, 开始学习 gRPC 啦！！！ 学习笔记，内容包括：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/&#34;&gt;Note1: gRPC | Hello Wrold&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/&#34;&gt;Note2: gRPC基础概念 | 什么是 RPC?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/&#34;&gt;Note3: gRPC基础概念 | 什么是 gRPC?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zhezh09.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/&#34;&gt;Note4: gRPC基础概念 | 什么是 Protocol Buffers?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: 依赖管理工具-02：Go Modules 使用过程学习笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-02/</link>
      <pubDate>Wed, 29 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-02/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;Go1.11 新特性 — 依赖管理工具：Go Modules 使用过程学习笔记，内容包括:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何在 &lt;code&gt;新&lt;/code&gt; 的项目上使用 go modules&lt;/li&gt;
&lt;li&gt;如何在 &lt;code&gt;旧&lt;/code&gt; 的项目中引入 go modules&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: 依赖管理工具-01：Go Modules 初步了解和学习</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-01/</link>
      <pubDate>Tue, 28 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180828-feature-go-modules-01/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;Go1.11 新特性 — 依赖管理工具：Go Modules 初步学习和使用笔记，内容包括:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;简单了解下 &lt;code&gt;Go Module&lt;/code&gt; 以及一些新概念&lt;/li&gt;
&lt;li&gt;简单了解下 &lt;code&gt;go mod&lt;/code&gt; 命令&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: 理解 Golang 的 nil (转)</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180822-advanced-%E7%90%86%E8%A7%A3golang%E7%9A%84nil/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180822-advanced-%E7%90%86%E8%A7%A3golang%E7%9A%84nil/</guid>
      <description>&lt;p&gt;&lt;strong&gt;理解 &lt;code&gt;nil&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 是什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 在 Go 中又是什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 意味着什么？&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nil&lt;/code&gt; 有用吗？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;我们常常会把 nil 拼写成 null, 学过 C 的同学肯定听过这个 null 符号，甚至某些让人痛恨的同学还故意取一个这样的名字&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang: Stdlib | Flag 学习笔记</title>
      <link>https://zhezh09.github.io/post/tech/code/golang/20180912-stdlib-flag/</link>
      <pubDate>Tue, 25 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://zhezh09.github.io/post/tech/code/golang/20180912-stdlib-flag/</guid>
      <description>&lt;!-- 摘要 --&gt;

&lt;p&gt;flag 包学习笔记概要：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;如何定义命令行参数，即 flags ？&lt;/li&gt;
&lt;li&gt;flags 解析规则及语法格式 ？&lt;/li&gt;
&lt;li&gt;flag 包有哪些重要的变量、函数以及类型 ？&lt;/li&gt;
&lt;li&gt;如何绑定用户自定义的数据类型作为参数值的类型？&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>