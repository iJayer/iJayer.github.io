<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>grpc on ijayer</title>
    <link>https://ijayer.github.io/tags/grpc/</link>
    <description>Recent content in grpc on ijayer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 10 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ijayer.github.io/tags/grpc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Golang | gRPC学习笔记-05 | 编码实践</title>
      <link>https://ijayer.github.io/post/tech/code/golang/20180910-grpc-05-practice/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijayer.github.io/post/tech/code/golang/20180910-grpc-05-practice/</guid>
      <description>学习完了理论知识，开始写点 Demo 体验一番吧！ Sohoo！😋 Statement: 文章转载自 大桥下的蜗牛 =&amp;gt; 视频笔记：gRPC 从学习到生产 - Alan Shreve。 原文(英)：</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-04 | 什么是 Protocol Buffers？</title>
      <link>https://ijayer.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/</link>
      <pubDate>Fri, 07 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijayer.github.io/post/tech/code/golang/20180907-grpc-04-what-is-protocol-buffers/</guid>
      <description>上一小节，简单熟悉了一下 gRPC，接下来继续学习 Protocol Buffers 的相关知识： 什么是 Protocol Buffers ? .proto 文件怎么写？ -&amp;gt; 语言规范 .proto 文件写好了怎么用？ 本指南描述了怎样使用</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-03 | 什么是 gRPC？</title>
      <link>https://ijayer.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/</link>
      <pubDate>Thu, 06 Sep 2018 09:12:12 +0000</pubDate>
      
      <guid>https://ijayer.github.io/post/tech/code/golang/20180906-grpc-03-what-is-grpc/</guid>
      <description>上一小节，简单熟悉了一下 RPC，接下来继续学习 gRPC 的基础概念： 什么是 gRPC ? gRPC 的关键概念有哪些 ? 在 gRPC 中，如何去定义一个服务 ？ gRPC 服务类型有哪几种？ 一</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-02 | 什么是 RPC？</title>
      <link>https://ijayer.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/</link>
      <pubDate>Thu, 06 Sep 2018 08:12:12 +0000</pubDate>
      
      <guid>https://ijayer.github.io/post/tech/code/golang/20180905-grpc-02-what-is-rpc/</guid>
      <description>上一小节，简单熟悉了一下基于 gRPC 的 Hello World Demo 程序，接下来学习 gRPC 的相关概念知识，先来看 RPC: 什么是 RPC ? RPC 的核心概念有哪些？ RPC 是调用流程是怎么样的？ Statement: 文中</description>
    </item>
    
    <item>
      <title>Golang | gRPC学习笔记-01 | Hello World Demo</title>
      <link>https://ijayer.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/</link>
      <pubDate>Wed, 05 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijayer.github.io/post/tech/code/golang/20180904-grpc-01-helloworld/</guid>
      <description>Ok, 先来安装 gRPC 的开发环境，并且实践一下 Hello World 程序吧！ 1. 开发环境 ENV: go version go1.11 windows/amd64 IDE: goland 使用 gRPC 需要安装以下开发环境 Install gRPC (RPC框架) Install Protocol Buffers v3 (Google推</description>
    </item>
    
    <item>
      <title>Golang | gRPC 学习笔记集</title>
      <link>https://ijayer.github.io/post/tech/code/golang/20180904-grpc-00/</link>
      <pubDate>Tue, 04 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ijayer.github.io/post/tech/code/golang/20180904-grpc-00/</guid>
      <description>🙂 So, 开始学习 gRPC 啦！！！ 学习笔记，内容包括： Note1: gRPC | Hello Wrold Note2: gRPC基础概念 | 什么是 RPC? Note3: gRPC基础概念 | 什么是 gRPC? Note4: gRPC基础概念 | 什么是 Protocol Buffers? See</description>
    </item>
    
  </channel>
</rss>